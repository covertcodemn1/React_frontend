{"version":3,"sources":["assets/apple-store.png","assets/google-play.png","logo1.svg","components/Home.js","components/Login.js","components/Navigation.js","components/HighscoreList.js","components/LoginNEW.js","components/Admin.js","components/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","Row","Col","xs","order","class","md","span","offset","Image","src","applestore","width","googleplay","Component","Login","state","email","password","loginErros","handelSubmit","bind","handelChange","event","this","setState","target","name","value","axios","post","user","withCredentials","then","response","console","log","catch","error","preventDefault","Form","Group","controlId","Label","Control","type","placeholder","defaultValue","onChange","Button","variant","Navigation","Navbar","bg","expand","Brand","href","logo","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","to","HighscoreList","users","get","res","data","array","Object","values","Table","striped","bordered","hover","size","map","arr","index","key","username","schoolclass","highscore","React","LoginNEW","props","loggedIn","submitForm","e","on","Submit","Admin","Logout","App","path","component","exact","logNew","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77621ccb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple-store.0f68a05a.png\";","module.exports = __webpack_public_path__ + \"static/media/google-play.45e5779c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo1.3374cc8c.svg\";","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport applestore from \"../assets/apple-store.png\";\r\nimport googleplay from \"../assets/google-play.png\";\r\nimport \"./style.css\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h1>Willkommen bei Schnitzeljagd AR</h1>\r\n\r\n            <h3>Erstelle deine eigene Virtuelle Schnitzeljagd</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs>\r\n            <p>Spaß für die ganze Familie</p>\r\n          </Col>\r\n          <Col xs={{ order: 12 }}>\r\n            <p>Lerne deine Umgebung spielerisch kennen</p>\r\n          </Col>\r\n          <Col xs={{ order: 1 }}>\r\n            <p>Partyspaß für dich und deine Freunde</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <span class=\"a\">Demnächst Verfügbar für</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ span: 1, offset: 0 }}>\r\n            <Image src={applestore} width={200}></Image>\r\n          </Col>\r\n          <Col md={{ span: 1, offset: 4 }}>\r\n            <Image src={googleplay} width={200}></Image>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport class Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loginErros: \"\"\r\n    };\r\n    this.handelSubmit = this.handelSubmit.bind(this);\r\n    this.handelChange = this.handelChange.bind(this);\r\n  }\r\n  handelChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  handelSubmit(event) {\r\n    const { email, password } = this.state;\r\n\r\n    axios\r\n      .post(\r\n        \"https://schnitzeljagdar.herokuapp.com/users/login\",\r\n        {\r\n          user: {\r\n            email: email,\r\n            password: password\r\n          }\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then(response => {\r\n        console.log(\"error\", response);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"error\", error);\r\n      });\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <h3>Anmelden</h3>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            defaultValue={this.state.email}\r\n            onChange={this.handelChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            defaultValue={this.state.password}\r\n            onChange={this.handelChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport logo from \"../logo1.svg\";\r\n\r\nexport class Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"./\">\r\n          <img\r\n            src={logo}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            className=\"d-inline-block bg-dark text-white\"\r\n            alt=\"Logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n            <NavLink className=\"d-inline p-4 bg-dark text-white\" to=\"./\">\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"d-inline p-4 bg-dark text-white\"\r\n              to=\"/Highscorelist\"\r\n            >\r\n              Highscore\r\n            </NavLink>\r\n          </Nav>\r\n          <Nav className=\"ml-auto\">\r\n            <NavLink className=\"d-inline p-4 bg-dark text-white\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nexport class HighscoreList extends React.Component {\r\n  state = {\r\n    users: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://schnitzeljagdar.herokuapp.com/users/getAllUser\")\r\n      .then(res => this.setState({ users: [res.data] }))\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    let array = users[0] ? Object.values(users[0]) : [];\r\n    console.log(array);\r\n    return (\r\n      <div>\r\n        <h1>Highscore</h1>\r\n\r\n        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Klasse</th>\r\n              <th>Highscore</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {array.map((arr, index) => (\r\n              <tr key={index}>\r\n                <td>{arr.username}</td>\r\n                <td>{arr.schoolclass}</td>\r\n                <td>{arr.highscore}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LoginNEW extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let loggedIn = false;\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>LoginNEW</h1>\r\n\r\n        <form on Submit={this.submitForm}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n          ></input>\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n          ></input>\r\n          <br />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default class Admin extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Admin Panel</h1>\r\n        <Link to=\"/logout\">logout</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Logged out!</h1>\r\n        <Link to=\"/\">Login Again</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./components/Home\";\nimport { Login } from \"./components/Login\";\nimport { Navigation } from \"./components/Navigation\";\nimport { HighscoreList } from \"./components/HighscoreList\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logNew from \"./components/LoginNEW\";\nimport Admin from \"./components/Admin\";\nimport Logout from \"./components/Logout\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/Highscorelist\" component={HighscoreList} exact />\n          <Route path=\"/login\" component={Login} exact />\n          <Route path=\"/loginNew\" component={logNew} exact />\n          <Route path=\"/admin\" component={Admin} exact />\n          <Route path=\"/logout\" component={Logout} exact />\n        </Switch>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}